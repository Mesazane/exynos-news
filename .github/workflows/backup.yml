name: AutoFix Indexing System
on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:

jobs:
  autofix:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Setup environment
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install git-date-extractor jq
          pip3 -q install beautifulsoup4 python-dateutil

      - name: Nuclear cleanup
        run: |
          rm -f docs/news/_index.json
          git rm --cached docs/news/_index.json || true

      - name: Generate indestructible index
        run: |
          cat << 'EOF' > robust_index.py
          import os
          import re
          import json
          import subprocess
          from bs4 import BeautifulSoup
          from dateutil.parser import parse

          class AutoFix:
              @staticmethod
              def get_date(filepath):
                  methods = [
                      AutoFix._html_header_date,
                      AutoFix._git_creation_date,
                      AutoFix._filename_date,
                      AutoFix._mtime_date
                  ]
                  for method in methods:
                      date = method(filepath)
                      if date: return date
                  return "1970-01-01"

              @staticmethod
              def _html_header_date(filepath):
                  try:
                      with open(filepath) as f:
                          soup = BeautifulSoup(f, 'html.parser')
                          header = soup.find('header')
                          if header:
                              return re.search(r'\d{4}-\d{2}-\d{2}', header.text).group()
                  except:
                      return None

              @staticmethod
              def _git_creation_date(filepath):
                  result = subprocess.run(['git', 'log', '--diff-filter=A', '--format=%aI', '--', filepath], 
                                      capture_output=True, text=True)
                  dates = result.stdout.strip().split('\n')
                  return parse(dates[-1]).strftime('%Y-%m-%d') if dates else None

              @staticmethod
              def _filename_date(filepath):
                  match = re.search(r'\d{4}-\d{2}-\d{2}', os.path.basename(filepath))
                  return match.group() if match else None

              @staticmethod
              def _mtime_date(filepath):
                  return parse(str(os.path.getmtime(filepath))).strftime('%Y-%m-%d')

          posts = []
          for root, _, files in os.walk('docs/news'):
              for file in files:
                  if file == 'index.html': continue
                  if file.endswith('.html'):
                      path = os.path.join(root, file)
                      try:
                          with open(path) as f:
                              title = BeautifulSoup(f.read(), 'html.parser').title.text
                              title = title.replace('| Exynos-News', '').strip()
                      except:
                          title = os.path.basename(file).replace('.html', '')
                      
                      posts.append({
                          'path': path.replace('docs/news/', ''),
                          'title': title,
                          'date': AutoFix.get_date(path)
                      })

          # Ensure valid JSON even if empty
          with open('docs/news/_index.json', 'w') as f:
              json.dump({'posts': sorted(posts, key=lambda x: x['date'], reverse=True)}, f, indent=2)
          EOF

          python3 robust_index.py

      - name: Validate & force push
        run: |
          # Ensure JSON validity at gunpoint
          jq empty docs/news/_index.json || {
            echo '{"posts": []}' > docs/news/_index.json
          }

          git config --global user.name "AutoFix Bot"
          git config --global user.email "autofix@exynos-news"
          git add docs/news/_index.json
          git commit -m "NUCLEAR INDEX FIX $(date +'%Y-%m-%d %H:%M')"
          git push --force
